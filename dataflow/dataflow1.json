{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empdataset",
						"type": "DatasetReference"
					},
					"name": "employeedata"
				},
				{
					"dataset": {
						"referenceName": "deptdataset",
						"type": "DatasetReference"
					},
					"name": "departmentdatas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "deptdataset",
						"type": "DatasetReference"
					},
					"name": "outputdata"
				}
			],
			"transformations": [
				{
					"name": "empanddeptdata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          salary as string,",
				"          gender as string,",
				"          depid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeedata",
				"source(output(",
				"          depid as string,",
				"          depname as string,",
				"          country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> departmentdatas",
				"employeedata, departmentdatas join(employeedata@depid == departmentdatas@depid,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> empanddeptdata",
				"empanddeptdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          depid as string,",
				"          depname as string,",
				"          country as string",
				"     ),",
				"     partitionFileNames:['empanddepdata'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          depid = employeedata@depid,",
				"          depname,",
				"          country",
				"     ),",
				"     partitionBy('hash', 1)) ~> outputdata"
			]
		}
	}
}